#!/usr/bin/env bash
VERSION='v1.4.5'

warn()  { echo "$@" >&2;        }
die()   { warn "$@"; exit 1;    }

DETECT=$(narada-detect narada-source narada-1) || exit 1
test "$DETECT" = "narada-1" && exec narada-release-1 "$@"


test $# == "1" || die "Usage: narada-release --major|--minor|--patch|<version>"

if test "$1" = "--major" -o "$1" = "--minor" -o "$1" = "--patch"; then
        cur=$(grep '^VERSION' migrate | sed 's/^VERSION\s\+\(\S\+\)\s*$/\1/' | tail -n 1)
        re='/^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/'
        if test "$1" = "--major"; then
                new=$(echo "$cur" | perl -ne 'printf "%d.%d.%d\n",1+$1,0,0   if '$re)
        elif test "$1" = "--minor"; then
                new=$(echo "$cur" | perl -ne 'printf "%d.%d.%d\n",$1,1+$2,0  if '$re)
        else
                new=$(echo "$cur" | perl -ne 'printf "%d.%d.%d\n",$1,$2,1+$3 if '$re)
        fi
        test -n "$new" || die "can't increment current version '$cur'"
else
        new="$1"
        echo "$new" | grep -q -P '[\x00-\x1F\x7F /?*`"'"'"'\\]' && die "version contain bad symbols"
        git check-ref-format --allow-onelevel "$new" || die "version contain bad symbols"
fi

git update-index -q --refresh --unmerged >/dev/null
git diff-index --quiet HEAD || die "work directory isn't 'clean', commit all changes first"

git tags | grep -q -x -F "$new" && die "version already exists"


set -x
./build --test &&
echo -ne "\\nINSTALL $new\\nVERSION $new\\n\\n" >> migrate &&
git add migrate &&
git commit -m "narada-release $new" &&
git tag ${NARADA_GIT_TAG:--a} "$new" &&
./release


: <<'=cut'

=encoding utf8

=head1 NAME

narada-release - release new version


=head1 VERSION

This document describes narada-release version v1.4.5


=head1 USAGE

    narada-release --major|--minor|--patch|<version>


=head1 DESCRIPTION

Should be executed in source directory of Narada project.

Release new tagged version for current commit (HEAD).

There are some requirements: work directory must be "clean", build and
build-time tests must run without errors (they'll be executed automatically by
narada-release), tag equal to given version shouldn't exists.

Use options C<--major>, C<--minor> or C<--patch> to automatically choose new
version, but they works only if format of last version in C<migrate>
conform to L<Semantic Versioning|http://semver.org/> specification.


=head1 CONFIGURATION AND ENVIRONMENT

None.


=head1 SUPPORT

=head2 Bugs / Feature Requests

Please report any bugs or feature requests through the issue tracker
at L<https://github.com/powerman/Narada/issues>.
You will be notified automatically of any progress on your issue.

=head2 Source Code

This is open source software. The code repository is available for
public review and contribution under the terms of the license.
Feel free to fork the repository and submit pull requests.

L<https://github.com/powerman/Narada>

    git clone https://github.com/powerman/Narada.git

=head2 Resources

=over

=item * MetaCPAN Search

L<https://metacpan.org/search?q=Narada>

=item * CPAN Ratings

L<http://cpanratings.perl.org/dist/Narada>

=item * AnnoCPAN: Annotated CPAN documentation

L<http://annocpan.org/dist/Narada>

=item * CPAN Testers Matrix

L<http://matrix.cpantesters.org/?dist=Narada>

=item * CPANTS: A CPAN Testing Service (Kwalitee)

L<http://cpants.cpanauthors.org/dist/Narada>

=back


=head1 AUTHOR

Alex Efros E<lt>powerman@cpan.orgE<gt>


=head1 COPYRIGHT AND LICENSE

This software is Copyright (c) 2008-2015 by Alex Efros E<lt>powerman@cpan.orgE<gt>.

This is free software, licensed under:

  The MIT (X11) License


=cut
